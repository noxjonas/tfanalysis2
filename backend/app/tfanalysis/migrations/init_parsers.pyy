# from django.db import migrations
#
# from ..parsers import *
#
# import sys, inspect
#
# def print_classes():
#     for name, obj in inspect.getmembers(sys.modules[__name__]):
#         if inspect.isclass(obj):
#             print(obj)
#
# def create_parsers(apps, schema_editor):
#     Parsers = apps.get_registered_model('tfanalysis', 'Parsers')
#     DefaultTransitionProcessingSettings = apps.get_registered_model('tfanalysis', 'DefaultTransitionProcessingSettings')
#     DefaultPeakProcessingSettings = apps.get_registered_model('tfanalysis', 'DefaultPeakProcessingSettings')
#
#     for name, obj in inspect.getmembers(sys.modules[__name__]):
#         if inspect.isclass(obj):
#             if 'parser_registration_settings' in dir(obj):
#                 print('found the one', str(obj.parser_registration_settings))
#                 print('the name is', obj.__name__)
#                 parser_obj, created = Parsers.objects.update_or_create(
#                     python_class_name=obj.__name__,
#                     defaults=obj.parser_registration_settings
#                 )
#                 transition_obj, created = DefaultTransitionProcessingSettings.objects.update_or_create(
#                     parser=parser_obj,
#                     defaults=obj.default_transition_processing_settings
#                 )
#                 peak_obj, created = DefaultPeakProcessingSettings.objects.update_or_create(
#                     parser=parser_obj,
#                     defaults=obj.default_peak_processing_settings
#                 )
#
# class Migration(migrations.Migration):
#     dependencies = [
#         ('tfanalysis', '0001_initial')
#     ]
#
#     operations = [
#         migrations.RunPython(create_parsers),
#     ]